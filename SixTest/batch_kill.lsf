#!/bin/sh
# The actual job
echo "Trying" 
echo "  $EXECS"
echo "on tests"
echo "  $TESTS"

export BATCH="batch_"
mkdir -p try
cd try
hname=`hostname`
hname=`echo $hname | cut -d"." -f1`
echo "=== `hostname` ==="
egrep 'model name' /proc/cpuinfo | head -1
egrep 'cpu MHz' /proc/cpuinfo | head -1
egrep 'cache size' /proc/cpuinfo | head -1
# Get bin and some scripts
cp -r $TRY/bin .
for scrip in batch batch.lsf batch_kill batch_kill.lsf batch_pro batch_pro.lsf run run_kill run_pro try try_kill try_pro
do
 cp $TRY/$scrip .
done
# Get all the data for the test cases
for t in $TESTS
do
  mkdir -p $t
  tin=${t}in
  mkdir -p $tin
  cp -r $TRY/$tin/* $tin
  cp -r $tin/* $t 
done
# and get a local copy of the excutable
# and an additional copy for checking by run
MYEXECS=$EXECS
EXEC=`basename $MYEXECS`
# EXECS should be new full path but may be used in run or one level beneath
EXECS="../$EXEC"
cp $MYEXECS .
cp $EXEC ..
ls -lR
# but we shall run one test at a time in order to get results quickly
MYTESTS=$TESTS   
for myt in $MYTESTS
do  
  TESTS=$myt
# To inherit back $dir and get back to try!
  mydir=`pwd`
  . ./run_kill
  cd $mydir
  for myres in fort.10 fort.6 fort.90 fort.110 fort.210 SixTwiss.dat beambeam-lostID.dat beambeam-output.dat checkdist.dat title.dat
  do
    ls $myt/${myres}.$dir > /dev/null 2>&1
    if test $? -eq 0
    then
      cp $myt/${myres}.$dir $TRY/$myt
    fi
  done
for myres in fort.10 fort.6 fort.90 fort.110 fort.210 SixTwiss.dat beambeam-lostID.dat beambeam-output.dat checkdist.dat title.dat
  do
    ls $myt/${myres}.${dir}.killed > /dev/null 2>&1
    if test $? -eq 0
    then
      cp $myt/${myres}.${dir}.killed $TRY/$myt
    fi
  done
done
ls -lR
