#!/bin/sh
# A test variation with kill/restart after 1/2/4/8/ seconds etc

#set -x #Xtrace for debugging

if test $# -ne 3
then
  echo "try_kill called without 3 parameters!!!"
  exit 1
fi
sixdir=$1
sixv=$2
dir=$3
BNL=""
LAHEY=""
echo "$sixv" | grep '_lf95' > /dev/null
if test $? -eq 0
then
  LAHEY="lf95"
fi
echo "$sixv" | grep '_bnl' > /dev/null
if test $? -eq 0
then
  BNL="bnl"
else
  TESTS=`echo $TESTS | sed -e's/bnl//'`
  echo "Ignoring TEST bnl as this executable does not handle bnlelens."
fi
BOINC=""
echo $sixv | grep '_boinc' >/dev/null
if test $? -eq 0
then
  BOINC="BOINC"
fi
CPSS=""
echo $sixv | grep '_cpss' >/dev/null
if test $? -eq 0
then
  CPSS="CPSS"
fi
CR=""
echo $sixv | grep '_cr_' >/dev/null
if test $? -eq 0
then
  CR="CR"
fi
date
echo "===================================="
echo "Testing Version $sixv in $sixdir"
echo "===================================="
echo "=== `hostname` ==="
egrep 'model name' /proc/cpuinfo | head -1
egrep 'cpu MHz' /proc/cpuinfo | head -1
egrep 'cache size' /proc/cpuinfo | head -1
esize=`size -d $sixdir/$sixv|sed -e'/dec/d' -e's/\t/ /g' -e's/  */ /'|cut -d" " -f1-4`
echo ""
echo "Size of $sixv $esize"
for i in $TESTS
do
  echo "===================================="
  echo "Testing CASE $i"
  echo "===================================="
  echo "=== $dir ==="
    echo "First time NO interrupts"
  rm -f *
  if test "$API" = ""
  then
    for j in 2 3 8 16
    do
      cp ../$i/fort.$j fort.$j
    done
    if test "$i" = "bnl"
    then
      cp ../$i/beambeamdist.dat beambeamdist.dat
      cp beambeamdist.dat fort.54
    fi
    if test -s ../$i/extra_inputs.txt; then
      echo "Found extra input files, copying more files..."
      set -f # Disable wildcard expansion
      while read extrafile; do
        echo "Got file = " $extrafile
	if test ! "$extrafile"; then
	  echo "      Invalid line! Skipping."
	  continue
	fi
	if ! test -f ../$i/$extrafile; then
	  echo "      File " $extrafile " not found, skipping!"
	  continue
	fi
	
	cp ../$i/$extrafile .
      done < ../$i/extra_inputs.txt
      set +f # Reanable wildcards
    fi
  else
    cp ../$i/Sixin.zip .
  fi
  # Run once unkilled to get results for comparison
  date
  if test "$LAHEY" = ""
  then
    time $sixdir/$sixv
  else
    time $sixdir/$sixv -Wl,-p6,-m6 
  fi
  date
# Now handle Sixout.zip
# but it may NOT exist for older versions!!
  if test "$API" != ""
  then
    if test -s Sixout.zip
    then
      rm -rf fort.* stderr.txt
      echo "Sixout.zip `ls -l Sixout.zip`"
      unzip Sixout.zip
      if test $? -ne 0
      then
        echo "Problem with Sixout.zip!!!"
      fi
    else
      echo "NO Sixout.zip (old SixTrack?)"
    fi
  fi
  egrep 'Computing Time|Total Time' fort.6
  cp fort.6 ../$i/fort.6.$dir
  cp fort.10 ../$i/fort.10.$dir
  cp fort.93 ../$i/fort.93.$dir
  if test -s fort.110
  then
    cp fort.110 ../$i/fort.110.$dir
  fi
  if test -s fort.90
  then
    cp fort.90 ../$i/fort.90.$dir
  fi
  if test -s fort.210
  then
    cp fort.210 ../$i/fort.210.$dir
  fi
  if test -s singletrackfile.dat
  then
    cp singletrackfile.dat ../$i/singletrackfile.dat.$dir
  fi
  if test -s fort.91
  then
    echo "Turns"
    cat fort.91
    echo "Restart log"
    cat fort.93
  fi
  
  # and copy back .dat files for bnl
  if test "$i" = "bnl"
  then
    if test "$CPSS" != "" -o "$CR" != ""
    then
      cp fort.10 ../$i/title.dat.${dir}
      cp fort.52 ../$i/beambeam-output.dat.${dir}
      cp fort.53 ../$i/beambeam-lostID.dat.${dir}
      cp fort.51 ../$i/SixTwiss.dat.${dir}
      cp fort.97 ../$i/checkdist.dat.${dir}
    elif test "$BOINC" != ""
    then
      egrep 'title     ' fort.10 > tmp$$
      sed -e's/title     //' tmp$$ > ../$i/title.dat.${dir}
      egrep 'output    ' fort.10 > tmp$$
      sed -e's/output    //' tmp$$ > ../$i/beambeam-output.dat.${dir}
      egrep 'lostID    ' fort.10 tmp$$ > tmp$$
      sed -e's/lostID    //' tmp$$ > ../$i/beambeam-lostID.dat.${dir}
      egrep 'checkdist ' fort.10 > tmp$$
      sed -e's/checkdist //' tmp$$ > ../$i/checkdist.dat.${dir}
      egrep 'SixTwiss  ' fort.10 > tmp$$
      sed -e's/SixTwiss  //' tmp$$ > ../$i/SixTwiss.dat.${dir}
      rm tmp$$
    else
      cp fort.10 ../$i/title.dat.${dir}
      cp beambeam-output.dat ../$i/beambeam-output.dat.${dir}
      cp beambeam-lostID.dat ../$i/beambeam-lostID.dat.${dir}
      cp SixTwiss.dat ../$i/SixTwiss.dat.${dir}
      cp checkdist.dat ../$i/checkdist.dat.${dir}
    fi
  fi

  if test -s ../$i/extra_checks.txt; then
    echo "Found extra_checks.txt, copying more files..."
    set -f #Disable wildcard expansion
    while read checkfile command; do
      echo "   Got file :: command = " $checkfile :: $command
      if test ! "$checkfile" -o ! "$command" ; then
        echo "      Invalid line! Skipping."
	continue
      fi
      
      if ! test -f $checkfile ; then
        echo "      File '$checkfile' not found, skipping!"
      fi
      
      #echo "   Copying file '"$checkfile"':"
      cp $checkfile ../$i/$checkfile.$dir
      
    done < ../$i/extra_checks.txt
    set +f #Renable wildcards (glob)
  else
    echo "No extra_checks.txt was found."
  fi
  
  if test -s "Sixout.zip"
  then
    file Sixout.zip
    ls -l Sixout.zip
  fi
  echo "and all fort.* *.dat"
  ls *.dat > /dev/null 2>&1
  if test $? -eq 0
  then
    ls -l *.dat 
  fi
  ls -l fort.*
  
  echo "Completely finished $i uninterrupted 1st time."
  echo "===================================="
  echo "Trying restarts now $i"
  echo "===================================="
  # Remove all files including output and restart
  rm -f fort.* *.dat Six*.zip
  # and get inputs
  if test "$API" = ""
  then
    for j in 2 3 8 16
    do
      cp ../$i/fort.$j fort.$j
    done
    if test "$i" = "bnl"
    then
      cp ../$i/beambeamdist.dat beambeamdist.dat
      cp beambeamdist.dat fort.54
    fi
    if test -s ../$i/extra_inputs.txt; then
      echo "Found extra input files, copying more files..."
      set -f # Disable wildcard expansion
      while read extrafile; do
        echo "Got file = " $extrafile
	if test ! "$extrafile"; then
	  echo "      Invalid line! Skipping."
	  continue
	fi
	if ! test -f ../$i/$extrafile; then
	  echo "      File " $extrafile " not found, skipping!"
	  continue
	fi
	
	cp ../$i/$extrafile .
      done < ../$i/extra_inputs.txt
      set +f # Reanable wildcards
    fi
  else
    cp ../$i/Sixin.zip Sixin.zip
  fi
  myname="$sixdir/$sixv"
  # but get rid of .exe!
  myname=`echo $myname | sed -e 's/\.exe//'`
  mysleep=1
  n=0
  date
  echo "Trying restarts: loop=$loops"
  if test "$LAHEY" = ""
  then
    time $sixdir/$sixv &
  else
    time $sixdir/$sixv -Wl,-p6,-m6 &
  fi
  ps -f
  ps -f| grep "$myname" > tmp$$
  sed -e'/grep/d' -e'/run_kill/d' tmp$$ > tmp2$$
  myproc=`cat tmp2$$`
  echo "myproc:$myproc"
  rm tmp$$ tmp2$$
  myproc=`echo $myproc | cut -d " " -f2`
  echo "SixTrack started Process No $myproc"
  running="true"
  while test $running = "true"
  do
    echo "Processes"
    ps -f
    ps -f| grep "$myname" > tmp$$
    sed -e'/grep/d' -e'/run_kill/d' tmp$$ > tmp2$$
    myproc=`cat tmp2$$`
    echo "myproc:$myproc"
    rm tmp$$ tmp2$$
    myproc=`echo $myproc | cut -d " " -f2`
    echo "Process No is $myproc"
    echo "Running - Sleeping $mysleep"
    sleep $mysleep
    if test "$mysleep" -lt "512"
    then
      mysleep=`expr $mysleep + $mysleep`
    fi
    echo "Processes"
    ps -f
    ps -f| grep "$myname" > tmp$$
    sed -e'/grep/d' -e'/run_kill/d' tmp$$ > tmp2$$
    myproc=`cat tmp2$$`
    echo "myproc:$myproc"
    rm tmp$$ tmp2$$
    myproc=`echo $myproc | cut -d " " -f2`
    if test "$myproc" != ""
    then
      echo "Process No is $myproc"
      echo "$myproc being killed"
      kill -9 $myproc
      sleep 3
      date
      echo "Restart files"
      ls -l fort.95 fort.96 
      echo "Restarting SixTrack"
      if test "$LAHEY" = ""
      then
        time $sixdir/$sixv &
      else
        time $sixdir/$sixv -Wl,-p6,-m6 &
      fi
      n=`expr $n + 1`
      echo "$i Restart number $n"
    else 
      echo "SixTrack finished!!!"
      date
      # Now handle Sixout.zip
      # but it may NOT exist for older versions!!
      if test "$API" != ""
      then
        if test -s Sixout.zip
        then
          rm -rf fort.* stderr.txt
          echo "Sixout.zip `ls -l Sixout.zip`"
          unzip Sixout.zip
          if test $? -ne 0
          then
            echo "Problem with Sixout.zip!!!"
          fi
        else
          echo "NO Sixout.zip (old SixTrack?)"
        fi
      fi
      egrep 'Computing Time|Total Time' fort.6
      if test $? != 0
      then
        echo "CATASROPHIC !!! Maybe by SIGSEV!!!"
        echo "Restart files"
        ls -l Sixout.zip fort.95 fort.96
        exit 99
      fi
      running="false"
    fi
  done
  date
  echo "Finished multiple restarts $i"
  ls -l
  egrep 'Computing Time|Total Time' fort.6
  diff fort.6 ../$i/fort.6.$dir
  if test "$i" != "bnl"
  then
    mkdir -p tmp$$
    cd tmp$$
    ln -s ../../$i/fort.10.$dir fort.20
    ln -s ../fort.10 fort.21
    $BIN/mychecktens
    cd ..
    rm -r tmp$$
  fi
  cp fort.6 ../$i/fort.6.${dir}.killed
  cp fort.10 ../$i/fort.10.${dir}.killed
  cp fort.93 ../$i/fort.93.${dir}.killed
  if test -s fort.110
  then
    cp fort.110 ../$i/fort.110.${dir}.killed
  fi
  if test -s fort.90
  then
    cp fort.90 ../$i/fort.90.$dir
  fi
  if test -s fort.210
  then
    cp fort.210 ../$i/fort.210.${dir}.killed
  fi
  if test -s singletrackfile.dat
  then
    cp singletrackfile.dat ../$i/singletrackfile.dat.$dir
  fi
  if test "$i" = "bnl"
  then
    if test "$CPSS" != "" -o "$CR" != ""
    then
      diff fort.10 ../$i/title.dat.$dir
      diff fort.52 ../$i/beambeam-output.dat.$dir
      diff fort.53 ../$i/beambeam-lostID.dat.$dir
      diff fort.51 ../$i/SixTwiss.dat.$dir
      diff fort.97 ../$i/checkdist.dat.$dir
    elif test "$BOINC" != ""
    then
      egrep 'title     ' fort.10 > tmp$$
      sed -e's/title     //' tmp$$ > title.dat
      diff title.dat ../$i/title.dat.$dir
      egrep 'output    ' fort.10 > tmp$$
      sed -e's/output    //' tmp$$ > beambeam-output.dat
      diff beambeam-output.dat ../$i/beambeam-output.dat.$dir
      egrep 'lostID    ' fort.10 tmp$$ > tmp$$
      sed -e's/lostID    //' tmp$$ > beambeam-lostID.dat
      diff beambeam-lostID.dat ../$i/beambeam-lostID.dat.$dir
      egrep 'checkdist ' fort.10 > tmp$$
      sed -e's/checkdist //' tmp$$ > checkdist.dat
      diff checkdist.dat ../$i/checkdist.dat.$dir
      egrep 'SixTwiss  ' fort.10 > tmp$$
      sed -e's/SixTwiss  //' tmp$$ > SixTwiss.dat
      diff SixTwiss.dat ../$i/SixTwiss.dat.$dir
      rm tmp$$
    else
      diff fort.10 ../$i/title.dat.$dir
      diff beambeam-output.dat ../$i/beambeam-output.dat.$dir
      diff beambeam-lostID.dat ../$i/beambeam-lostID.dat.$dir
      diff SixTwiss.dat ../$i/SixTwiss.dat.${dir}.killed
      diff checkdist.dat ../$i/checkdist.dat.$dir
    fi
  fi
  if test "$i" = "bnl"
  then
    if test "$CPSS" != "" -o "$CR" != ""
    then
      cp fort.10 ../$i/title.dat.${dir}.killed
      cp fort.52 ../$i/beambeam-output.dat.${dir}.killed
      cp fort.53 ../$i/beambeam-lostID.dat.${dir}.killed
      cp fort.51 ../$i/SixTwiss.dat.${dir}.killed
      cp fort.97 ../$i/checkdist.dat.${dir}.killed
    elif test "$BOINC" != ""
    then
      egrep 'title     ' fort.10 > tmp$$
      sed -e's/title     //' tmp$$ > ../$i/title.dat.${dir}.killed
      egrep 'output    ' fort.10 > tmp$$
      sed -e's/output    //' tmp$$ > ../$i/beambeam-output.dat.${dir}.killed
      egrep 'lostID    ' fort.10 tmp$$ > tmp$$
      sed -e's/lostID    //' tmp$$ > ../$i/beambeam-lostID.dat.${dir}.killed
      egrep 'checkdist ' fort.10 > tmp$$
      sed -e's/checkdist //' tmp$$ > ../$i/checkdist.dat.${dir}.killed
      egrep 'SixTwiss  ' fort.10 > tmp$$
      sed -e's/SixTwiss  //' tmp$$ > ../$i/SixTwiss.dat.${dir}.killed
      rm tmp$$
    else
      cp fort.10 ../$i/title.dat.${dir}.killed
      cp beambeam-output.dat ../$i/beambeam-output.dat.${dir}.killed
      cp beambeam-lostID.dat ../$i/beambeam-lostID.dat.${dir}.killed
      cp SixTwiss.dat ../$i/SixTwiss.dat.${dir}.killed
      cp checkdist.dat ../$i/checkdist.dat.${dir}.killed
    fi
  fi

  if test -s ../$i/extra_checks.txt; then
    echo "Found extra_checks.txt, copying more files..."
    set -f #Disable wildcard expansion
    while read checkfile command; do
      echo "   Got file :: command = " $checkfile :: $command
      if test ! "$checkfile" -o ! "$command" ; then
        echo "      Invalid line! Skipping."
	continue
      fi
      
      if ! test -f $checkfile ; then
        echo "      File '$checkfile' not found, skipping!"
      fi
      
      #echo "   Copying file '"$checkfile"':"
      cp $checkfile ../$i/$checkfile.$dir.killed
      
    done < ../$i/extra_checks.txt
    set +f #Renable wildcards (glob)
  else
    echo "No extra_checks.txt was found."
  fi
  
  if test -s "Sixout.zip"
  then
    file Sixout.zip
    ls -l Sixout.zip
  fi
  echo "and all fort.* *.dat"
  ls *.dat > /dev/null 2>&1
  if test $? -eq 0
  then
    ls -l *.dat 
  fi
  if test -s fort.91
  then
    echo "Turns"
    cat fort.91
    echo "Restart log"
    cat fort.93
  fi
  ls -l fort.*
done
