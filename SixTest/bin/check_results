#!/bin/sh
prov=canonical
export BIN=`pwd`/bin
if test $# -eq 0
then
  echo "You need to give a Version name (or two)!!!"
  exit
fi
newv=$1
if test $# -eq 2
then
  prov=$1
  newv=$2
fi
for e in $TESTS
do
  if test ! -d "$e"
  then
    echo "      ===================================="
    echo "      CASE $e directory does not exist!!!"
    echo "      ===================================="
  else
    cd $e
    ls fort.10.*${newv}* >> ../etmp$$ 2>/dev/null
    cd ..
  fi
done
sort --unique etmp$$ > etmp2$$
newvs=`cat etmp2$$ | sed -e's/fort.10.//'`
rm -rf etmp*
#BNL="bnl"
#mybnl=`echo "$newv" | grep 'bnl'`
#if test "$mybnl" = ""
#then
#  BNL=""
#fi
for v in $newvs
do
  echo "++++++++++++++++++++++++++++++++++++++"
  echo "Comparing $prov to $v"
  echo "++++++++++++++++++++++++++++++++++++++"
  tests="$TESTS"
  for i in $tests
  do
    if test ! -d "$i"
    then
      echo "      ===================================="
      echo "      CASE $i directory does not exist!!!"
      echo "      ===================================="
    else
      echo "      ===================================="
      echo "      CASE $i"
      echo "      ===================================="
      if test -s $i/fort.6.$prov
      then 
        if test -s $i/fort.6.$v
        then
          mkdir -p tmp$$
          rm -rf tmp$$/*
          sed -e '/SIXTRACK/d' \
              -e '/SIXTRACR/d' \
              -e '/TITLE/d' \
              -e '/IDFOR/d' \
              -e 's/Version.*HIGZ started/                               /' \
              -e '/Postprocessing/d' \
              -e '/Preparating/d' \
              -e '/Total Time/d' \
              -e '/Turn(s)/d' \
              -e '/^ *$/d' \
                 $i/fort.6.$prov > tmp$$/fort6prov
          sed -e '/SIXTRACK/d' \
              -e '/SIXTRACR/d' \
              -e '/TITLE/d' \
              -e '/IDFOR/d' \
              -e 's/Version.*HIGZ started/                               /' \
              -e '/Postprocessing/d' \
              -e '/Preparating/d' \
              -e '/Total Time/d' \
              -e '/Turn(s)/d' \
              -e '/^ *$/d' \
              -e 's/-\(0\.0[0]*[ |]\)/  \1/g' \
              -e 's/-\(0\.0[0]* *$\)/  \1/g' \
                 $i/fort.6.$v > tmp$$/fort6v
          diff -b -w tmp$$/fort6prov tmp$$/fort6v > tmp2$$ 2>&1
          if test $? -eq 0
          then
            echo "fort.6 SAME"
          else
           ### head -200 tmp2$$
            head -20 tmp2$$
          fi
          rm -f tmp2$$
          if test "$i" != bnl
          then
            diff -b -w $i/fort.10.$prov $i/fort.10.$v > /dev/null
            if test $? -ne 0
            then
              cd tmp$$
              ln -s ../$i/fort.10.$prov fort.20
              ln -s ../$i/fort.10.$v fort.21
  #           $HOME/sixdesk/slap/scripts/mychecktens
              $BIN/verify10
  #           $HOME/sixdesk/slap/scripts/verify10no59
              #$HOME/sixdesk/slap/scripts/checktens | egrep "SAME 22|SAME 23|DIFF 22|DIFF 23"
              #$HOME/sixdesk/slap/scripts/checktens | egrep "DIFF 22|DIFF 23"
            cd ..
  #         else
  #           echo "BNL fort.10 (title) difference!"
  #           cat $i/fort.10.$prov
  #           cat $i/fort.10.$v
            fi
          else
            echo "title.dat"
            diff -b -w $i/title.dat.$prov $i/title.dat.$v
            echo "beambeam-output.dat"
            diff -b -w $i/beambeam-output.dat.$prov $i/beambeam-output.dat.$v
            echo "beambeam-lostID.dat"
            diff -b -w $i/beambeam-lostID.dat.$prov $i/beambeam-lostID.dat.$v
            echo "SixTwiss.dat"
            diff -b -w $i/SixTwiss.dat.$prov $i/SixTwiss.dat.$v
            echo "checkdist.dat"
            diff -b -w $i/checkdist.dat.$prov $i/checkdist.dat.$v
          fi
          rm -rf tmp$$
        else
          echo "      Not yet available $v"
        fi
      else
        echo "      Not yet available $prov"
      fi
    fi
  done
done
